angular.module("app", ["ui.router", "pascalprecht.translate", "ui.bootstrap", "functions"]).config(["$stateProvider", "$urlRouterProvider", "$translateProvider", "$translatePartialLoaderProvider", function (t, e, r, o) { e.otherwise("/index"), t.state("index", { url: "/index", templateUrl: "partials/index.html", controller: "appCtrl" }).state("about", { url: "/about", templateUrl: "partials/about.html" }), r.useLoader("$translatePartialLoader", { urlTemplate: "./json/translations/{lang}/{part}.json" }), r.preferredLanguage("en"), o.addPart("main") }]).controller("appCtrl", ["$scope", "$http", "$translate", "$translatePartialLoader", "functions", function (t, e, r, o, a) { t.message = "Web page under construction."; e.get("../config/config.json").then(function (e) { t.config = e.data, "undefined" != typeof Storage && (localStorage.version ? localStorage.version !== t.config.version && (localStorage.version = t.config.version, window.location.reload(!0)) : localStorage.version = t.config.version) }), t.lang = "hr", t.setLanguage = function (t) { r.use(t), o.addPart("main") }, t.setLanguage(t.lang); a.post("Products", "GetCities", {}).then(e=> { t.cities = e }); a.post("ProductGroups", "GetProductGroups", {}).then(e=> { t.productGroups = e }); a.post("Products", "GetProductsByDisplayType", { displayType: 0 }).then(e=> { t.products = e }); a.post("Products", "GetProductsByDisplayType", { displayType: 1 }).then(e=> { t.contents = e }); navigator.geolocation && navigator.geolocation.getCurrentPosition(function (e) { t.$apply(function () { t.position = e, t.myLatitude = e.coords.latitude, t.myLongitude = e.coords.longitude, angular.forEach(t.products, function (e) { var r, o, a, n, i, s, c, u, l, d; e.distance = (r = t.myLatitude, o = t.myLongitude, a = e.Latitude, n = e.Longitude, i = "K", s = Math.PI * r / 180, c = Math.PI * a / 180, Math.PI, Math.PI, u = o - n, l = Math.PI * u / 180, d = Math.sin(s) * Math.sin(c) + Math.cos(s) * Math.cos(c) * Math.cos(l), d = 60 * (d = 180 * (d = Math.acos(d)) / Math.PI) * 1.1515, "K" === i && (d *= 1.609344), "N" === i && (d *= .8684), d.toFixed(2)) }) }) }), t.orderValue = "Distance", t.sort = function (e) { t.orderValue = e }, t.filterValue = "", t.filter = function (e) { t.filterValue = e } }]).controller("productCtrl", ["$scope", "$http", "$translate", "functions", function (t, e, r, o) { var a = location.search.split("&"); if ("id" === a[0].substring(1, 3)) var n = a[0].substring(4); (e=> { o.post("Products", "GetProductByProductId", { productId: e }).then(e=> { t.p = e }) })(n) }]).directive("sortDirective", function () { return { restrict: "E", templateUrl: "partials/filterCtrl.html" } }).directive("productDirective", function () { return { restrict: "E", scope: { filtercategory: "=", products: "=", filtervalue: "=", ordervalue: "=" }, templateUrl: "partials/products.html" } }).directive("checkImage", function (t) { return { restrict: "A", link: function (e, r, o) { o.$observe("ngSrc", function (e) { t.get(e).success(function () { }).error(function () { r.attr("src", "./img/default.png") }) }) } } });